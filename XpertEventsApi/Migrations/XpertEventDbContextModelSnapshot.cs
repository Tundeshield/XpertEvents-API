// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XpertEventsApi.Data;

#nullable disable

namespace XpertEventsApi.Migrations
{
    [DbContext(typeof(XpertEventDbContext))]
    partial class XpertEventDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("XpertEventsApi.Data.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Wedding"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Naming Ceremony"
                        });
                });

            modelBuilder.Entity("XpertEventsApi.Data.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tunde Adepegba",
                            password = "chemicals"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Smita Pandya",
                            password = "projectManagement"
                        });
                });

            modelBuilder.Entity("XpertEventsApi.Data.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CustomerId = 2,
                            Date = new DateTime(2022, 6, 3, 12, 27, 36, 677, DateTimeKind.Local).AddTicks(5343),
                            Description = "You are specially invited to the holy matrimony of Bukola and Tunde Adepegba on the 31st of may, 2023",
                            EventTitle = "Bukola's wedding"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CustomerId = 1,
                            Date = new DateTime(2022, 6, 3, 12, 27, 36, 677, DateTimeKind.Local).AddTicks(5384),
                            Description = "You are specially invited to the Naming Ceremony and marriage of tayo, 2023",
                            EventTitle = "Tayo's wedding"
                        });
                });

            modelBuilder.Entity("XpertEventsApi.Data.Event", b =>
                {
                    b.HasOne("XpertEventsApi.Data.Category", "Category")
                        .WithMany("Events")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XpertEventsApi.Data.Customer", "Customer")
                        .WithMany("Events")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("XpertEventsApi.Data.Category", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("XpertEventsApi.Data.Customer", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
